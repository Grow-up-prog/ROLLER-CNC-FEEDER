#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 16, 2); //menggunakan LCD 16x2
//variabel state


/*
  setting nomor pin button
  selector manual auto
  MANUAL : -->
  maju <--> mundur   (JOG)
  setting speed, -->sedang & cepat
  AUTO :
  setting length -->
*/
int middleSpeed = 500;
int fastSpeed = 200;
int setSpeedRun;
int SPD = 0;
int Lman = 10;//10cm start awal <-->2823
int Lmesin;
int MD = 0;
const int button1 = 8;  //SelektorManual
const int button2 = 9;  //SelektorAuto
const int button3 = 10; //PB-X
const int button4 = 11; //PB-Y
const int button5 = 4; //TRIGGER

int button1VAL;
int button2VAL;
int button3VAL;
int button4VAL;
int button5VAL;

//last choice:
int setSPD;
int setL;
int setMD;

//setting stepper
const int stepPin = 5;
const int dirPin = 6;
const int enPin = 7;
int x = 0;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  //PULLUP pada button pin
  pinMode(button1, INPUT_PULLUP);
  pinMode(button2, INPUT_PULLUP);
  pinMode(button3, INPUT_PULLUP);
  pinMode(button4, INPUT_PULLUP);
  pinMode(button5, INPUT_PULLUP);
  pinMode(stepPin, OUTPUT);
  pinMode(dirPin, OUTPUT);
  pinMode(enPin, OUTPUT);
  digitalWrite(enPin, LOW);
  //pull up inpun pin akan HIGH apabila switch terbuka dan LOW ketika switch ter-tutup
  lcd.init();
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("CNC ROLL FEEDER");
  delay(1500);
  lcd.clear();
  Lmesin = Lman * 278;
}
void loop() {
  lcd.setCursor(0, 0);
  lcd.print("SP:");
  lcd.setCursor(8, 0);
  lcd.print("L:");
  lcd.setCursor(0, 1);
  lcd.print("MD:");
  button1VAL = digitalRead(button1);
  button3VAL = digitalRead(button3);
  button4VAL = digitalRead(button4);
  button5VAL = digitalRead(button5);
  



  if (button1VAL == HIGH) {
    MD = 1;
    lcd.setCursor(5, 1);
    lcd.print("AUTO");
  } else if (button1VAL == LOW) {
    MD = 0;
    lcd.setCursor(5, 1);
    lcd.print("MANUAL");
  }


  if (SPD == LOW) {
    lcd.setCursor(3, 0);
    lcd.print("MID");
    setSpeedRun = middleSpeed;
  } else   if (SPD == HIGH) {
    lcd.setCursor(3, 0);
    lcd.print("HIGH");
    setSpeedRun = fastSpeed;
  }
  //Printing Length
  lcd.setCursor(10, 0);
  lcd.print(Lman);
  lcd.setCursor(14, 0);
  lcd.print("CM");
  if (MD != setMD || SPD != setSPD || Lmesin != setL) {
    setL = Lmesin;
    setSPD = SPD;
    lcd.clear();
    delay(500);
  }

  if (MD == LOW) {
    if (button3VAL == HIGH && button4VAL == LOW) {
      Serial.println("JOG-");
      digitalWrite(dirPin, HIGH); // Enables the motor to move in a particular direction
      for (int x = 0; x < 100; x++) {
        digitalWrite(stepPin, HIGH);
        delayMicroseconds(setSpeedRun);
        digitalWrite(stepPin, LOW);
        delayMicroseconds(setSpeedRun);
      }
      x = 0;
    } else if (button3VAL == LOW && button4VAL == HIGH) {
      Serial.println("JOG+");
      digitalWrite(dirPin, LOW); // Enables the motor to move in a particular direction
      for (int x = 0; x < 100 ; x++) {
        digitalWrite(stepPin, HIGH);
        delayMicroseconds(setSpeedRun);
        digitalWrite(stepPin, LOW);
        delayMicroseconds(setSpeedRun);
      }
      x = 0;
    } else if (button3VAL == LOW && button4VAL == LOW) {
      SPD++;
      if (SPD > 1) {
        SPD = 0;
      }
    }
  }


  if (MD == HIGH) {
    if (button3VAL == HIGH && button4VAL == LOW) {
      if (Lman > 1) {
        Lmesin = Lmesin - 278;
        Lman--;
      }
    } else if (button3VAL == LOW && button4VAL == HIGH) {
      Lmesin = Lmesin + 278;
      Lman++;
    } else if (button3VAL == LOW && button4VAL == LOW ||button5VAL==LOW ) {
      Serial.print("RUNNING");
      digitalWrite(dirPin, HIGH); // Enables the motor to move in a particular direction
      for (int x = 0; x < Lmesin; x++) {
        digitalWrite(stepPin, HIGH);
        delayMicroseconds(setSpeedRun);
        digitalWrite(stepPin, LOW);
        delayMicroseconds(setSpeedRun);
      }
      x = 0;

    }
  }
  setMD = MD;
  delay(500);
}

/*

*/
